{"mappings":"AA0BA,MACMA,EAAOC,SAASC,cAAc,mBAsBpC,WACE,IAAIC,EAAOC,aAAaC,QAxBR,uBAyBhB,IAAKF,EAAM,OACXA,EAAOG,KAAKC,MAAMJ,GAIlB,IAAK,MAAMK,KAAOL,EAChBH,EAAKS,SAASD,GAAKE,MAAQP,EAAKK,IAAQ,E,CA7B5CG,GACAX,EAAKY,iBAAiB,UAGtB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,MAAEA,EAAKC,QAAEA,GAAYH,EAAEI,cAAcR,SAC3CS,QAAQC,IAAI,CAAEJ,MAAOA,EAAML,MAAOM,QAASA,EAAQN,QAC/CN,aAAaC,QAVD,wBAWdD,aAAagB,WAXC,uBAahBP,EAAEI,cAAcI,O,IATlBrB,EAAKY,iBAAiB,QAASU,UAY/B,SAAqBT,GACnB,IAAIV,EAAOC,aAAaC,QAjBR,uBAkBhBF,EAAOA,EAAOG,KAAKC,MAAMJ,GAAQ,GACjCA,EAAKU,EAAEU,OAAOC,MAAQX,EAAEU,OAAOb,MAAMe,OACrCrB,aAAasB,QApBG,sBAoBgBpB,KAAKqB,UAAUxB,G,GAhBI","sources":["src/js/03-feedback.js"],"sourcesContent":["// 1. Отслеживай на форме событие input, и каждый раз записывай в локальное \n// хранилище объект с полями email и message, в которых \n// сохраняй текущие значения полей формы. Пусть ключом для хранилища \n// будет строка \"feedback-form-state\".\n// 2. При загрузке страницы проверяй состояние хранилища, \n// и если там есть сохраненные данные, заполняй ими поля формы. \n// В противном случае поля должны быть пустыми.\n// 3. При сабмите формы очищай хранилище и поля формы, \n// а также выводи объект с полями email, message и текущими их значениями \n// в консоль.\n// 4. Сделай так, чтобы хранилище обновлялось не чаще чем раз \n// в 500 миллисекунд. Для этого добавь в проект и используй библиотеку \n// lodash.throttle.\n\n// const formEl = document.querySelector('.feedback-form');\n// console.log(formEl);\n// const inputEl = formEl.querySelector('input');\n// const textAreaEl = formEl.querySelector('textarea');\n// console.log(formEl);\n// formEl.addEventListener('input', function() {\n//     console.log(inputEl.currentTarget.value);\n//     // const inform = {\n        \n//     // }\n// });\n\nconst LOCAL_KEY = 'feedback-form-state';\nconst form = document.querySelector('.feedback-form');\npopulateFeedbackForm();\nform.addEventListener('submit', onFormSubmit);\nform.addEventListener('input', throttle(onInputData, 500));\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const { email, message } = e.currentTarget.elements;\n  console.log({ email: email.value, message: message.value });\n  if (localStorage.getItem(LOCAL_KEY)) {\n    localStorage.removeItem(LOCAL_KEY);\n  }\n  e.currentTarget.reset();\n}\n\nfunction onInputData(e) {\n  let data = localStorage.getItem(LOCAL_KEY);\n  data = data ? JSON.parse(data) : {};\n  data[e.target.name] = e.target.value.trim();\n  localStorage.setItem(LOCAL_KEY, JSON.stringify(data));\n}\n\nfunction populateFeedbackForm() {\n  let data = localStorage.getItem(LOCAL_KEY);\n  if (!data) return;\n  data = JSON.parse(data);\n  // Object.entries(data).forEach(([name, value]) => {\n  //   form.elements[name].value = value || '';\n  // });\n  for (const key in data) {\n    form.elements[key].value = data[key] || '';\n  }\n}"],"names":["$945622fd0f572e60$var$form","document","querySelector","data","localStorage","getItem","JSON","parse","key","elements","value","$945622fd0f572e60$var$populateFeedbackForm","addEventListener","e","preventDefault","email","message","currentTarget","console","log","removeItem","reset","throttle","target","name","trim","setItem","stringify"],"version":3,"file":"03-feedback.5c137df4.js.map"}